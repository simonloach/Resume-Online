#!/usr/bin/env python3
"""
generate_resume.py
Clean HTML resume generator that reads `resume_data.yaml` and writes `html/index.html`.
Uses external Jinja template from assets/templates/ if available, otherwise fallback template.
"""
import os
from typing import Dict, Any

import yaml
from jinja2 import Template

# Fallback template if external template not found
FALLBACK_TEMPLATE = r"""
<!doctype html>
<html>
<head>
  <meta charset="utf-8">
  <title>{{ personal_info.name }} - Resume</title>
  <style>
    body { font-family: Arial, Helvetica, sans-serif; color: #222; max-width: 900px; margin: 24px auto; }
    header { text-align: center; border-bottom: 2px solid #eee; padding-bottom: 8px; margin-bottom: 12px; }
    h1 { margin: 4px 0; }
    .meta { color: #666; font-size: 0.9rem; }
    .section { margin-top: 14px; }
    .section-title { font-weight: bold; color: #2c3e50; margin-bottom: 6px; }
    ul { margin: 4px 0 8px 18px; }
  </style>
</head>
<body>
  <header>
    <h1>{{ personal_info.name }}</h1>
    <div class="meta">{{ personal_info.email }} | {{ personal_info.phone }} | {{ personal_info.location }}</div>
  </header>

  <div class="section">
    <div class="section-title">Summary</div>
    <div>{{ about.summary }}</div>
  </div>

  <div class="section">
    <div class="section-title">Experience</div>
    {% for c in experience.corporate %}
      {% for p in c.positions %}
        <div class="job">
          <div><strong>{{ p.title }}</strong> — <em>{{ c.company }}</em></div>
          <div class="meta">{{ p.duration }} • {{ p.location }}</div>
          {% if p.responsibilities %}
          <ul>
            {% for r in p.responsibilities[:6] %}
            <li>{{ r }}</li>
            {% endfor %}
          </ul>
          {% endif %}
        </div>
      {% endfor %}
    {% endfor %}
  </div>

  <footer style="margin-top:24px;color:#888;font-size:0.9rem">Generated by generate_resume.py</footer>
</body>
</html>
"""


def load_data(path: str = "resume_data.yaml") -> Dict[str, Any]:
    """Load resume data from YAML file."""
    with open(path, "r", encoding="utf-8") as f:
        return yaml.safe_load(f)


def render_html(data: Dict[str, Any]) -> str:
    """Render HTML using external template if available, otherwise fallback."""
    external_template = os.path.join("assets", "templates", "jinja_template.html")
    
    if os.path.exists(external_template):
        print(f"Using external template: {external_template}")
        with open(external_template, "r", encoding="utf-8") as f:
            template_content = f.read()
    else:
        print("Using fallback template")
        template_content = FALLBACK_TEMPLATE
    
    template = Template(template_content)
    return template.render(**data)


def write_html(html: str, out_path: str = "html/index.html") -> None:
    """Write rendered HTML to file."""
    os.makedirs(os.path.dirname(out_path), exist_ok=True)
    with open(out_path, "w", encoding="utf-8") as f:
        f.write(html)


def main() -> None:
    """Main function."""
    data = load_data()
    html = render_html(data)
    write_html(html)
    print("✅ index.html generated at html/index.html")


if __name__ == "__main__":
    main()